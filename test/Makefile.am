# Makefile.am for CoFlo's Test directory.
#
# Copyright 2011 Gary R. Van Sickle (grvs@users.sourceforge.net).
#
# This file is part of CoFlo.
#
# CoFlo is free software: you can redistribute it and/or modify it under the
# terms of version 3 of the GNU General Public License as published by the Free
# Software Foundation.
#
# CoFlo is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.  See the GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License along with
# CoFlo.  If not, see <http://www.gnu.org/licenses/>.

## Process this file with automake to produce Makefile.in.

# Include additional automake fragments.
include $(top_srcdir)/amlocal.am

# Add scripts which will be generated and used during "make check" to check_SCRIPTS.
# Note that scripts are not distributed by default, so we don't need a "nodist_" prefix here.
check_SCRIPTS = generated_tests.at
EXTRA_DIST = testsuite.at $(srcdir)/package.m4 $(TESTSUITE) #atlocal.in
CLEANFILES = generated_tests.at
TESTSUITE = $(srcdir)/testsuite

###
### Rules to hook the AutoTest functionality into Automake.
###
check-local: atconfig $(TESTSUITE)
	$(SHELL) '$(TESTSUITE)' $(TESTSUITEFLAGS)
     
installcheck-local: atconfig $(TESTSUITE)
	$(SHELL) '$(TESTSUITE)' AUTOTEST_PATH='$(bindir)' \
	$(TESTSUITEFLAGS)
     
clean-local:
	test ! -f '$(TESTSUITE)' || \
	$(SHELL) '$(TESTSUITE)' --clean
     
AUTOM4TE = $(SHELL) $(top_srcdir)/build-aux/missing --run autom4te
AUTOTEST = $(AUTOM4TE) --language=autotest

# The `:;' works around a Bash 3.2 bug when the output is not writeable.
$(srcdir)/package.m4: $(top_srcdir)/configure.ac
	:;{ \
	echo '# Signature of the current package.' && \
	echo 'm4_define([AT_PACKAGE_NAME],' && \
	echo '  [$(PACKAGE_NAME)])' && \
	echo 'm4_define([AT_PACKAGE_TARNAME],' && \
	echo '  [$(PACKAGE_TARNAME)])' && \
	echo 'm4_define([AT_PACKAGE_VERSION],' && \
	echo '  [$(PACKAGE_VERSION)])' && \
	echo 'm4_define([AT_PACKAGE_STRING],' && \
	echo '  [$(PACKAGE_STRING)])' && \
	echo 'm4_define([AT_PACKAGE_BUGREPORT],' && \
	echo '  [$(PACKAGE_BUGREPORT)])'; \
	echo 'm4_define([AT_PACKAGE_URL],' && \
	echo '  [$(PACKAGE_URL)])'; \
	} >'$(srcdir)/package.m4'

###
### Make-check-time generated tests.
###
generated_tests.at: Makefile
	GCC_LIST=$$(find /usr/bin -iname '*-*-*-gcc-*$(EXEEXT)' -or -iname '*-*-*-gcc$(EXEEXT)') && \
	echo "Found GCC's: "$${GCC_LIST} && \
	echo "# GENERATED BY MAKE, DO NOT EDIT." > $@ && \
	for NAME in $${GCC_LIST}; do \
	    GCC_VERSION_STRING="$$($${NAME} --version | head -n 1)" && \
	    GCC_VERSION_MAJOR="$$(echo "$${GCC_VERSION_STRING}" | sed -r -n -e 's/.+ ([[:digit:]]+)\.[[:digit:]]+\.[[:digit:]]+( .+)?$$/\1/p')" && \
	    echo "GCC Version String: <$${GCC_VERSION_MAJOR}> $${GCC_VERSION_STRING}" && \
	    { \
	    echo "" && \
	    echo "# Start a test group for testing CoFlo with $${NAME}."  && \
	    echo "AT_SETUP([[Using GCC \"$${NAME}\" against C code...]])" && \
	    echo "# Expect to fail if the GCC is a 3.x version, or the GCC we thought we found above" && \
	    echo "# no longer appears to exist and/or isn't executable by the current user on this system." && \
	    echo "AT_XFAIL_IF([test ! -x $${NAME}])" && \
	    echo "AT_XFAIL_IF([test \"$${GCC_VERSION_MAJOR}\" -le \"3\"])" && \
	    echo "AT_CHECK([\$${abs_top_builddir}/src/coflo.exe --use-gcc=$${NAME} \$${abs_top_srcdir}/test/test_source_file_1.c \$${abs_top_srcdir}/test/test_source_file_2.c --print-function-cfg=main], \
		0, \
		ignore, \
		ignore)" && \
	    echo "# End this test group." && \
	    echo "AT_CLEANUP" && \
	    : ; \
	    } >> $@ ; \
	done;
	:; { echo "" && echo "# GENERATION COMPLETE."; } >> $@

###
### testsuite.at isn't built, but it does include generated_tests.at,
### so we'll let make know about this dependency.
###
$(srcdir)/testsuite.at: generated_tests.at

###
### The rule which makes the "testsuite" shell script.
###
$(TESTSUITE): $(srcdir)/testsuite.at generated_tests.at $(srcdir)/package.m4
	$(AUTOTEST) -I '$(srcdir)' -o $@.tmp $@.at
	mv $@.tmp $@


###
### Some other files that we need for the tests.
###

# The C test file.
C_TEST_SOURCE = $(srcdir)/test_source_file_1.c $(srcdir)/test_source_file_2.c
# The built C++ test files.
CPP_TEST_SOURCE = test_source_file_1.cpp test_source_file_2.cpp
CLEANFILES += $(CPP_TEST_SOURCE)

test_source_file_1.cpp: $(srcdir)/test_source_file_1.c
	@# Simply copy the C files to make C++ versions.
	cp $(srcdir)/test_source_file_1.c $@;

test_source_file_2.cpp: $(srcdir)/test_source_file_2.c
	@# Simply copy the C files to make C++ versions.
	cp $(srcdir)/test_source_file_2.c $@;

# List of scripts that will be use during "make check" and are not built.  Note that scripts are not
# distributed by default, hence the "dist_" prefix.
#dist_check_SCRIPTS = test_template.sh

# List of scripts that will be used during "make check" and are built.  Note that scripts are not
# distributed by default, so these built scripts have no "dist_".
#check_SCRIPTS = test_cpp1.sh
#EXTRA_SCRIPTS = 
#CLEANFILES += $(check_SCRIPTS)

#test_cpp1.sh: test_template.sh Makefile $(CPP_TEST_SOURCE)
#	cat $(srcdir)/test_template.sh | sed -e 's,[@]gcc[@],gcc,g' \
#	    -e 's,[@]test_source[@],\"${CPP_TEST_SOURCE}\",g' \
#	> $@
