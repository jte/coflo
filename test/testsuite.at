# testsuite.at for CoFlo
#
# Copyright 2011 Gary R. Van Sickle (grvs@users.sourceforge.net).
#
# This file is part of CoFlo.
#
# CoFlo is free software: you can redistribute it and/or modify it under the
# terms of version 3 of the GNU General Public License as published by the Free
# Software Foundation.
#
# CoFlo is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.  See the GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License along with
# CoFlo.  If not, see <http://www.gnu.org/licenses/>.

# A basic test suite for CoFlo.

AT_INIT([[CoFlo Test Suite]])
AT_COPYRIGHT([[Copyright (C) 2011 Gary R. Van Sickle]])
AT_COLOR_TESTS

# We only have one executable to test.
AT_TESTED([coflo.exe])

# Get a list of the gcc binaries installed on the system.
# This runs once at "make check" time, prior to AT_INIT().
m4_divert_once([PREPARE_TESTS],
[
	AS_ECHO(["Getting a list of gcc installations..."])
	#todo This is duplicated in the ./test/Makefile.am, should figure out a way to make this a single definition.
	MAX_GCCS_TO_TEST=16;
	for (( i=0; $i<${MAX_GCCS_TO_TEST}; i++ )); do
		# Initialize all GCC_VERSION_ARRAY entries to 0, so the skip test works correctly.
		[GCC_VERSION_ARRAY@<:@$i@:>@="0";]
	done;
	# Get the paths to gcc's.
	GCC_ARRAY=($(find /usr/bin -regextype posix-extended -iregex '.*-.*-.*-gcc-.*(\.exe)?$' -or -iregex '.*/gcc(\.exe)?$'));
	NUM_GCCS_FOUND=${#GCC_ARRAY@<:@*@:>@};
	for (( i=0; $i<${NUM_GCCS_FOUND}; i++ )); do
		# Get the version string from the compiler.
		GCC_VERSION_STRING="$("${GCC_ARRAY@<:@$i@:>@}" --version | head -n 1)";
		# Extract the major version number (the "X" from "X.Y.Z").
		[GCC_VERSION_ARRAY@<:@$i@:>@="$(echo "${GCC_VERSION_STRING}" | sed -r -n -e 's/.+ ([[:digit:]]+)\.[[:digit:]]+\.[[:digit:]]+( .+)?$/\1/p')";]
		AS_ECHO(["Found the following gcc binary: ${GCC_ARRAY@<:@$i@:>@} (major version ${GCC_VERSION_ARRAY@<:@$i@:>@})"])
	done;
	# Initialize the remaining GCC path slots to "NONE" so the skipped test message looks better.
	for (( ; $i<${MAX_GCCS_TO_TEST}; i++ )); do
		GCC_ARRAY@<:@$i@:>@="NONE";
	done;
])dnl

# Start a test category.
AT_BANNER([[Compiler Compatibility Tests]])

# Start a test group.
AT_SETUP([[Using default GCC against C code]])

AT_CHECK([${abs_top_builddir}/src/coflo.exe ${abs_top_srcdir}/test/test_source_file_1.c ${abs_top_srcdir}/test/test_source_file_2.c --print-function-cfg=main],
	0,
	ignore,
	ignore)

# End this test group.
AT_CLEANUP

# Include the compiler compatibility test script.
# This file is generated at [TODO: autoconf time?]
m4_include([generated_tests.at])

AT_SETUP([[Using default GCC against C-style C++ code]])

AT_CHECK([${abs_top_builddir}/src/coflo.exe ${abs_top_builddir}/test/test_source_file_1.cpp ${abs_top_builddir}/test/test_source_file_2.cpp --print-function-cfg=main],
	0,
	ignore,
	ignore)

# End this test group.
AT_CLEANUP
